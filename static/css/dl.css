/* charset UTF-8 */

* {
  -webkit-box-sizing: inherit;
  -moz-box-sizing: inherit;
  box-sizing: inherit;
  /* type stuff */
  -moz-font-feature-settings: "kern";
  -webkit-font-feature-settings: "kern";
  -ms-font-feature-settings: "kern";
  -o-font-feature-settings: "kern";
  font-feature-settings: "kern";
  font-kerning: normal;
  text-rendering: optimizeLegibility;
}

html {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

body {
  margin: 0;
  padding: 0;
  background-color: rgb(242,239,229);
  background-color: rgba(242,239,229,1);
  color: rgb(132,133,94);
  color: rgba(132,133,94,1);
  font-family: "Adobe Caslon", AdobeCaslon, Gentium, Georgia, Times, Serif;
  line-height: 1.3;
}

header .dl-logo {
  fill: rgb(132,133,94);
  fill: rgba(132,133,94,1);
}

/** general links styles (to start with) */
a,
a:link {
  color: rgb(132,133,94);
  color: rgba(132,133,94,.9);
  text-decoration: none;
  transition: all 400ms;
}

p a,
p a:link {
  border-bottom: 1px solid rgb(132,133,94);
  border-bottom: 1px solid rgba(132,133,94,.4);
}

a:hover {
  color: rgb(132,133,94);
  color: rgba(132,133,94,.4);
}

p a:hover {
  border-bottom: 1px solid rgb(132,133,94);
  border-bottom: 1px solid rgba(132,133,94,.9);
}

img { width: 100%; height: auto; }

.all-caps,
.uppercase {
  text-transform: uppercase;
  letter-spacing: .075em;
}

.list-reset {
  margin: 0;
  padding: 0;
  list-style: none;
}

.clear {
  clear:both;
  display: block;
}

/* text align modules */
.text-center,
.center-text   { text-align: center; }
.text-left,
.left-text     { text-align: left; }
.text-right,
.right-text    { text-align: right; }

/* Visibility Classes */
.show {
  display: block !important;
}
.hidden {
  display: none !important;
}
.invisible {
  visibility: hidden;
}

.visible-lg,
.hidden-sm {
  display: none;
  visibility: hidden;
}

.hide-text {
  text-indent: 200%;
  white-space: nowrap;
  overflow: hidden;
}

.show-text {
  text-indent: 0;
  white-space: normal;
  overflow: visible;
}

/* floats and clears */
.left,
.floatleft,
.float-left,
.leftfloat,
.left-float {
  float: left;
}

.right,
.floatright,
.float-right,
.rightfloat,
.right-float {
  float: right;
}

.clear,
.clearboth,
.clear-both,
.both-clear,
.bothclear {
  clear: both;
}
.clearleft,
.leftclear,
.clear-left,
.left-clear {
  clear: left;
}
.clearright,
.rightclear,
.clear-right,
.right-clear {
  clear: right;
}

.absolute   { position: absolute; }
.fixed      { position: fixed;    }
.relative   { position: relative; }
.static     { position: static;   }

/* some grid related stuff */
/* columnar stuff */
.wrapper,
.container {
  margin: 0 auto;
  padding: 0 1rem 2rem 1rem;
  width: 100%;
}

.group,
.grouped,
.row {
  margin: 0 0 2rem 0;
}

.clearfix::after,
.clear-fix::after,
.cf::after,
.group::after {
  content: '';
  display: table;
  clear: both;
}

.column,
.columns {
  margin: 0 0 2rem 0;
  padding: 0;
}

/* Start of the Grid
===========================================*/
/*
  widths are set using CSS calc() function
  width: calc(100% / x * y);
  where x = #of columns total, and y = #of columns the class crosses.
  by default this is a 12 column grid, so x = 12
*/
.one,
.two,
.three,
.four,
.five,
.six,
.halfwidth,
.seven,
.eight,
.nine,
.ten,
.eleven,
.twelve,
.fullwidth    { width: calc(100% / 12 * 12); }
/*everything goes full width on skinny viewports */

@media (min-width: 30rem) {
  .wrapper,
  .container {
    margin: 0 auto;
    padding-bottom: 2rem;
    min-width: 30rem;
    width: 80%;
  }
}

@media (min-width: 50rem) {
  .wrapper,
  .container {
    margin: 0 auto;
    padding-bottom: 2rem;
    max-width: 75rem;
  }

  .group,
  .grouped,
  .row {
    margin: 0 -1rem 2rem -1rem;
  }

  /* columnar stuff */
  .column,
  .columns {
    float: left;
    margin: 0 0 2rem 0;
    padding: 0 1rem;
  }

  /* the Grid
  ===========================================*/
  /*
    widths are set using CSS calc() function
    width: calc(100% / x * y);
    where x = #of columns total, and y = #of columns the class crosses.
    by default this has been set as a 12 column grid, so x = 12.
    y matches numerically the class number.
  */
  .one                   { width: calc(100% / 12 * 01); }
  .two                   { width: calc(100% / 12 * 02); }
  .three                 { width: calc(100% / 12 * 03); }
  .four                  { width: calc(100% / 12 * 04); }
  .five                  { width: calc(100% / 12 * 05); }
  .six, .halfwidth       { width: calc(100% / 12 * 06); }
  .seven                 { width: calc(100% / 12 * 07); }
  .eight                 { width: calc(100% / 12 * 08); }
  .nine                  { width: calc(100% / 12 * 09); }
  .ten                   { width: calc(100% / 12 * 10); }
  .eleven                { width: calc(100% / 12 * 11); }
  .twelve, .fullwidth    { width: calc(100% / 12 * 12); }
  /*
    you can easily add more columns (or remove columnes) by
    changing 12 to the number of total columns you want, and then
    add additional classes for the extra columns...
    like if you want 16 column base grid, you'd get something like
    width: calc(100% / x * y);
    x would be 16
    width: calc(100% / 16 * #columnsSpanned);
    make sense?
  */


  /* some standard offsets */
  .offset-by-one         { margin-left: calc(100% / 12 * 01); }
  .offset-by-two         { margin-left: calc(100% / 12 * 02); }
  .offset-by-three       { margin-left: calc(100% / 12 * 03); }
  .offset-by-four        { margin-left: calc(100% / 12 * 04); }
  .offset-by-five        { margin-left: calc(100% / 12 * 05); }
  .offset-by-six,
  .offset-by-half        { margin-left: calc(100% / 12 * 06); }
  .offset-by-seven       { margin-left: calc(100% / 12 * 07); }
  .offset-by-eight       { margin-left: calc(100% / 12 * 08); }
  .offset-by-nine        { margin-left: calc(100% / 12 * 09); }
  .offset-by-ten         { margin-left: calc(100% / 12 * 10); }
  .offset-by-eleven      { margin-left: calc(100% / 12 * 11); }
  .offset-by-twelve      { margin-left: calc(100% / 12 * 12); }

  .visible-lg {
    display: block;
    visibility: visible;
  }
  .visible-sm,
  .hidden-lg {
    display: none;
    visibility: hidden;
  }
}

/* some preset margins, padding, etc ... */
/* margin modules */
.m0      { margin: 0;     }
.m1      { margin: 1rem;  }
.m2      { margin: 2rem;  }
.m3      { margin: 3rem;  }
.m4      { margin: 4rem;  }

.mlrauto { margin-left: auto; margin-right: auto; }

.mt0     { margin-top: 0;     }
.mt1     { margin-top: 1rem;  }
.mt2     { margin-top: 2rem;  }
.mt3     { margin-top: 3rem;  }
.mt4     { margin-top: 4rem;  }

.mb0     { margin-bottom: 0;     }
.mb1     { margin-bottom: 1rem;  }
.mb2     { margin-bottom: 2rem;  }
.mb3     { margin-bottom: 3rem;  }
.mb4     { margin-bottom: 4rem;  }

/* padding modules */
.p0      { padding: 0;    }
.p1      { padding: 1rem; }
.p2      { padding: 2rem; }
.p3      { padding: 3rem; }
.p4      { padding: 4rem; }

.px0     { padding-left: 0;    padding-right: 0;    }
.px1     { padding-left: 1rem; padding-right: 1rem; }
.px2     { padding-left: 2rem; padding-right: 2rem; }
.px3     { padding-left: 3rem; padding-right: 3rem; }
.px4     { padding-left: 4rem; padding-right: 4rem; }

.pt0     { padding-top: 0;     }
.pt1     { padding-top: 1rem;  }
.pt2     { padding-top: 2rem;  }
.pt3     { padding-top: 3rem;  }
.pt4     { padding-top: 4rem;  }

.pb0     { padding-bottom: 0;     }
.pb1     { padding-bottom: 1rem;  }
.pb2     { padding-bottom: 2rem;  }
.pb3     { padding-bottom: 3rem;  }
.pb4     { padding-bottom: 4rem;  }

/* border modules */
.bt0     { border-top: none;     }
.bt1     { border-top: 1px solid currentColor;  }
.bt2     { border-top: 2px solid currentColor;  }
.bt3     { border-top: 3px solid currentColor;  }
.bt4     { border-top: 4px solid currentColor;  }

.bb0     { border-bottom: none;     }
.bb1     { border-bottom: 1px solid currentColor;  }
.bb2     { border-bottom: 2px solid currentColor;  }
.bb3     { border-bottom: 3px solid currentColor;  }
.bb4     { border-bottom: 4px solid currentColor;  }

small,
.small {
  font-size: .8em;
}

/**/

.flex-center {
  display: flex;
  align-items: center;
  width: 100%;
  height: 100%;
}

.flex-center.text-center {
  justify-content: center;
}

.flex-center > *,
.flex-center .flex-item {
  flex: 1;
}

/******************************************/
/******************************************/
/* detail related */
/******************************************/
/******************************************/

.item-information {
  position: fixed;
  background-color: rgb(242,239,229);
  background-color: rgba(242,239,229,1);
  left: 0;
  right: 0;
  box-shadow: 0 0 1em 0 rgba(132,133,94,.5);
}
